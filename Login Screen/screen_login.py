#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 6.2
#  in conjunction with Tcl version 8.6
#    Aug 06, 2021 05:10:01 PM -03  platform: Windows NT

# Importando os módulos e funções.
import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True



class Toplevel1:
    # Características da janela,feito pelo 'PAGE'!
    # Poderia ter sido criado a mão,mas utilizando o PAGE,o processo é bem mais rápido
    # No ambiente de trabalho,essa ferramenta se torna bem útil,otimizando o nosso tempo.
    def __init__(self):
        '''This class configures and populates the rootlevel window.
           root is the rootlevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        self.root = tk.Tk()
        self.root.geometry("724x587+536+139")
        self.root.minsize(120, 1)
        self.root.maxsize(1924, 1061)
        self.root.resizable(1,  1)
        self.root.title("Tela de Login")
        self.root.configure(background="#16e4d0")

        self.FrameCadastro = tk.Frame(self.root)
        self.FrameCadastro.place(relx=0.235, rely=0.256, relheight=0.458, relwidth=0.522)
        self.FrameCadastro.configure(relief='flat')
        self.FrameCadastro.configure(borderwidth="2")
        self.FrameCadastro.configure(background="#ee39bc")

        self.Entry1 = tk.Entry(self.FrameCadastro)
        self.Entry1.place(relx=0.106, rely=0.335, height=20, relwidth=0.778)
        self.Entry1.configure(background="white")
        self.Entry1.configure(cursor="fleur")
        self.Entry1.configure(disabledforeground="#a3a3a3")
        self.Entry1.configure(font="TkFixedFont")
        self.Entry1.configure(foreground="#000000")
        self.Entry1.configure(insertbackground="black")

        self.Entry2 = tk.Entry(self.FrameCadastro, show = '*')
        self.Entry2.place(relx=0.106, rely=0.595, height=20, relwidth=0.778)
        self.Entry2.configure(background="white")
        self.Entry2.configure(disabledforeground="#a3a3a3")
        self.Entry2.configure(font="TkFixedFont")
        self.Entry2.configure(foreground="#000000")
        self.Entry2.configure(insertbackground="black")

        self.Label1Cadastro = tk.Label(self.FrameCadastro)
        self.Label1Cadastro.place(relx=0.317, rely=0.074, height=31, width=134)
        self.Label1Cadastro.configure(background="#ee39bc")
        self.Label1Cadastro.configure(disabledforeground="#a3a3a3")
        self.Label1Cadastro.configure(font="-family {SimSun} -size 15")
        self.Label1Cadastro.configure(foreground="#000000")
        self.Label1Cadastro.configure(text='''Login''')

        self.Label1Cadastro_1 = tk.Label(self.FrameCadastro)
        self.Label1Cadastro_1.place(relx=0.026, rely=0.186, height=31, width=134)
        self.Label1Cadastro_1.configure(activebackground="#f9f9f9")
        self.Label1Cadastro_1.configure(activeforeground="black")
        self.Label1Cadastro_1.configure(background="#ee39bc")
        self.Label1Cadastro_1.configure(disabledforeground="#a3a3a3")
        self.Label1Cadastro_1.configure(font="-family {SimSun} -size 15")
        self.Label1Cadastro_1.configure(foreground="#000000")
        self.Label1Cadastro_1.configure(highlightbackground="#d9d9d9")
        self.Label1Cadastro_1.configure(highlightcolor="black")
        self.Label1Cadastro_1.configure(text='''Usuário''')

        self.Label1Cadastro_2 = tk.Label(self.FrameCadastro)
        self.Label1Cadastro_2.place(relx=0.0, rely=0.446, height=31, width=134)
        self.Label1Cadastro_2.configure(activebackground="#f9f9f9")
        self.Label1Cadastro_2.configure(activeforeground="black")
        self.Label1Cadastro_2.configure(background="#ee39bc")
        self.Label1Cadastro_2.configure(disabledforeground="#a3a3a3")
        self.Label1Cadastro_2.configure(font="-family {SimSun} -size 15")
        self.Label1Cadastro_2.configure(foreground="#000000")
        self.Label1Cadastro_2.configure(highlightbackground="#d9d9d9")
        self.Label1Cadastro_2.configure(highlightcolor="black")
        self.Label1Cadastro_2.configure(text='''Senha''')

        self.Button1Cadastro = tk.Button(self.FrameCadastro, command = self.login_backend)
        self.Button1Cadastro.place(relx=0.053, rely=0.743, height=34, width=137)
        self.Button1Cadastro.configure(activebackground="#ececec")
        self.Button1Cadastro.configure(activeforeground="#020e01")
        self.Button1Cadastro.configure(background="#61e91f")
        self.Button1Cadastro.configure(disabledforeground="#a3a3a3")
        self.Button1Cadastro.configure(font="-family {SimSun} -size 15")
        self.Button1Cadastro.configure(foreground="#000000")
        self.Button1Cadastro.configure(highlightbackground="#d9d9d9")
        self.Button1Cadastro.configure(highlightcolor="black")
        self.Button1Cadastro.configure(pady="0")
        self.Button1Cadastro.configure(text='''Entrar''')

        self.Button1Cadastro_1 = tk.Button(self.FrameCadastro, command = self.cadastro)
        self.Button1Cadastro_1.place(relx=0.556, rely=0.743, height=34, width=137)
        self.Button1Cadastro_1.configure(activebackground="#ececec")
        self.Button1Cadastro_1.configure(activeforeground="#020e01")
        self.Button1Cadastro_1.configure(background="#61e91f")
        self.Button1Cadastro_1.configure(cursor="fleur")
        self.Button1Cadastro_1.configure(disabledforeground="#a3a3a3")
        self.Button1Cadastro_1.configure(font="-family {SimSun} -size 15")
        self.Button1Cadastro_1.configure(foreground="#000000")
        self.Button1Cadastro_1.configure(highlightbackground="#d9d9d9")
        self.Button1Cadastro_1.configure(highlightcolor="black")
        self.Button1Cadastro_1.configure(pady="0")
        self.Button1Cadastro_1.configure(text='''Cadastrar''')

        self.TSeparator1 = ttk.Separator(self.FrameCadastro)
        self.TSeparator1.place(relx=0.481, rely=0.71,  relheight=0.245)
        self.TSeparator1.configure(orient="vertical")

        self.root.mainloop()

    # Criando uma nova janela,assim que o usuário for logado.
    
    def cadastro(self):
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        self.root = tk.Tk()
        self.root.geometry("724x587+536+139")
        self.root.minsize(120, 1)
        self.root.maxsize(1924, 1061)
        self.root.resizable(1,  1)
        self.root.title("Cadastro")
        self.root.configure(background="#16e4d0")

        self.FrameCadastro = tk.Frame(self.root)
        self.FrameCadastro.place(relx=0.235, rely=0.256, relheight=0.458
                , relwidth=0.522)
        self.FrameCadastro.configure(relief='flat')
        self.FrameCadastro.configure(borderwidth="2")
        self.FrameCadastro.configure(background="#ee39bc")

        self.Entry1Cadastro = tk.Entry(self.FrameCadastro)
        self.Entry1Cadastro.place(relx=0.106, rely=0.335, height=20, relwidth=0.778)
        self.Entry1Cadastro.configure(background="white")
        self.Entry1Cadastro.configure(cursor="fleur")
        self.Entry1Cadastro.configure(disabledforeground="#a3a3a3")
        self.Entry1Cadastro.configure(font="TkFixedFont")
        self.Entry1Cadastro.configure(foreground="#000000")
        self.Entry1Cadastro.configure(insertbackground="black")

        self.Entry2Cadastro = tk.Entry(self.FrameCadastro, show = '*')
        self.Entry2Cadastro.place(relx=0.106, rely=0.595, height=20, relwidth=0.778)
        self.Entry2Cadastro.configure(background="white")
        self.Entry2Cadastro.configure(disabledforeground="#a3a3a3")
        self.Entry2Cadastro.configure(font="TkFixedFont")
        self.Entry2Cadastro.configure(foreground="#000000")
        self.Entry2Cadastro.configure(insertbackground="black")

        self.Label1Cadastro = tk.Label(self.FrameCadastro)
        self.Label1Cadastro.place(relx=0.317, rely=0.074, height=31, width=134)
        self.Label1Cadastro.configure(background="#ee39bc")
        self.Label1Cadastro.configure(disabledforeground="#a3a3a3")
        self.Label1Cadastro.configure(font="-family {SimSun} -size 15")
        self.Label1Cadastro.configure(foreground="#000000")
        self.Label1Cadastro.configure(text='''Cadastro''')

        self.Label1Cadastro_1 = tk.Label(self.FrameCadastro)
        self.Label1Cadastro_1.place(relx=0.026, rely=0.186, height=31, width=134)
        self.Label1Cadastro_1.configure(activebackground="#f9f9f9")
        self.Label1Cadastro_1.configure(activeforeground="black")
        self.Label1Cadastro_1.configure(background="#ee39bc")
        self.Label1Cadastro_1.configure(disabledforeground="#a3a3a3")
        self.Label1Cadastro_1.configure(font="-family {SimSun} -size 15")
        self.Label1Cadastro_1.configure(foreground="#000000")
        self.Label1Cadastro_1.configure(highlightbackground="#d9d9d9")
        self.Label1Cadastro_1.configure(highlightcolor="black")
        self.Label1Cadastro_1.configure(text='''Usuário''')

        self.Label1Cadastro_2 = tk.Label(self.FrameCadastro)
        self.Label1Cadastro_2.place(relx=0.0, rely=0.446, height=31, width=134)
        self.Label1Cadastro_2.configure(activebackground="#f9f9f9")
        self.Label1Cadastro_2.configure(activeforeground="black")
        self.Label1Cadastro_2.configure(background="#ee39bc")
        self.Label1Cadastro_2.configure(disabledforeground="#a3a3a3")
        self.Label1Cadastro_2.configure(font="-family {SimSun} -size 15")
        self.Label1Cadastro_2.configure(foreground="#000000")
        self.Label1Cadastro_2.configure(highlightbackground="#d9d9d9")
        self.Label1Cadastro_2.configure(highlightcolor="black")
        self.Label1Cadastro_2.configure(text='''Senha''') 

        self.Button1Cadastro_1 = tk.Button(self.FrameCadastro, command = self.cadastrar_backend)
        self.Button1Cadastro_1.place(relx=0.556, rely=0.743, height=34, width=137)
        self.Button1Cadastro_1.configure(activebackground="#ececec")
        self.Button1Cadastro_1.configure(activeforeground="#020e01")
        self.Button1Cadastro_1.configure(background="#61e91f")
        self.Button1Cadastro_1.configure(cursor="fleur")
        self.Button1Cadastro_1.configure(disabledforeground="#a3a3a3")
        self.Button1Cadastro_1.configure(font="-family {SimSun} -size 15")
        self.Button1Cadastro_1.configure(foreground="#000000")
        self.Button1Cadastro_1.configure(highlightbackground="#d9d9d9")
        self.Button1Cadastro_1.configure(highlightcolor="black")
        self.Button1Cadastro_1.configure(pady="0")
        self.Button1Cadastro_1.configure(text='''Cadastrar''')

        self.TSeparator1 = ttk.Separator(self.FrameCadastro)
        self.TSeparator1.place(relx=0.481, rely=0.71,  relheight=0.245)
        self.TSeparator1.configure(orient="vertical")

        self.root.mainloop()


    def cadastrar_backend(self):
        try:
            with open('usuarios.txt', 'a') as arquivo_usuario:
                arquivo_usuario.write(self.Entry1Cadastro.get() + '\n')

            with open('senhas.txt', 'a') as arquivo_senha:
                arquivo_senha.write(self.Entry2Cadastro.get() + '\n')
            self.root.destroy()
        except:
            print('Houve um erro')
    
    
    def login_backend(self):
        with open('usuarios.txt', 'r') as arquivo_usuario:
            usuarios = arquivo_usuario.readlines()
        
        with open('senhas.txt', 'r') as arquivo_usuario:
            senhas = arquivo_usuario.readlines()

        usuarios = list(map(lambda x: x.replace('\n', ''), usuarios))
        senhas = list(map(lambda x: x.replace('\n', ''), senhas))
       
        usuario = self.Entry1.get()
        senha = self.Entry2.get()
        
        logado = False
        for i in range(len(usuarios)):
            if usuario == usuarios[i] and senha == senhas[i]:
                print('Usuário Logado!')
                logado = True
                self.root.destroy()

        if not logado:
            print('Usuário ou Senha incorreta!')
            self.root.destroy()
            

Toplevel1()